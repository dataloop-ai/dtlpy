options:
  docker: true
pipelines:
  tags:
    "*":
      - step:
          image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
          name: Build SDK Container
          script:
            # Get an oauth access token using the client credentials, parsing out the token with jq.
            - apt-get update && apt-get install -y curl jq

            # Make changes and commit back.
            - case "$BITBUCKET_TAG" in "") export BITBUCKET_TAG="build-$BITBUCKET_BUILD_NUMBER"; esac
            - apt-get -y update && apt-get install -y python3-pip
            - python3 setup.py bdist_wheel
            - docker login -u _json_key -p "$GCP_KEY" https://gcr.io
            - cp dist/dtlpy-$BITBUCKET_TAG-py3-none-any.whl dist/dtlpy-latest-py3-none-any.whl
            - echo "$GCP_KEY" >> k.json
            - gcloud auth activate-service-account --key-file=k.json
            - gsutil -m cp -R dist/**  gs://dtlpy/dev/
            - export DOCKER_BUILDKIT=0
            - chmod +x ./build-docker.sh
            - echo $BITBUCKET_TAG
            - ./build-docker.sh $BITBUCKET_TAG
            - git checkout -b "$BITBUCKET_TAG"
            - >
              export access_token=$(curl -s -X POST -u "${CLIENT_ID}:${CLIENT_SECRET}" \
                https://bitbucket.org/site/oauth2/access_token \
                -d grant_type=client_credentials -d scopes="repository"| jq --raw-output '.access_token')
            - git clone https://x-token-auth:${access_token}@bitbucket.org/dataloop-ai/piper-agent-runner.git
            - cd piper-agent-runner
            - git config user.email sdk@dataloop.ai
            - git checkout master
            - python3 bumpversion.py --hard $BITBUCKET_TAG.0
            - git push --follow-tags
            - cd ..
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Build SDK Container` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
      - step:
          name: Update dataloop-infra
          image: node:20.6.0
          script:
            - apt-get update && apt-get install -y curl jq
            - echo $BITBUCKET_TAG
            - export INFRA_BRANCH="rc"
            - echo $INFRA_BRANCH
            - case "$BITBUCKET_TAG" in "") export BITBUCKET_TAG="build-$BITBUCKET_BUILD_NUMBER"; esac
            - git config --global user.email "devops@dataloop.ai"
            - git config --global user.name "sdk-docs-pipeline"
            - git clone --branch $INFRA_BRANCH git@bitbucket.org:dataloop-ai/dataloop-infra.git && sed -i "s/^DTLPY.*$/DTLPY=$BITBUCKET_TAG/" dataloop-infra/versions/.rc  && cat dataloop-infra/versions/.rc
            - cd dataloop-infra && git commit -am "DTLPY=$BITBUCKET_TAG"
            - >
              export access_token=$(curl -s -X POST -u "${AUTH0_CONSUMERS_DTLPY_PIPELINE_CLIENT_ID}:${AUTH0_CONSUMERS_DTLPY_PIPELINE_CLIENT_SECRET}" \
                https://bitbucket.org/site/oauth2/access_token \
                -d grant_type=client_credentials -d scopes="repository"| jq --raw-output '.access_token')

            - git tag -a $BITBUCKET_TAG -m "DTLPY=$BITBUCKET_TAG" && git push https://x-token-auth:${access_token}@bitbucket.org/dataloop-ai/dataloop-infra.git --follow-tags
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Update dataloop-infra` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "run-test-python-3.6.11":
      - step:
          image: python:3.6.11
          name: Tests-3.6.11
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r tests/requirements.txt
            - python setup.py build
            - pip install .
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Tests-3.6.11` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
    "run-test-python-3.7.8":
      - step:
          image: python:3.7.8
          name: Tests3.7.8
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r tests/requirements.txt
            - python setup.py build
            - pip install .
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Tests3.7.8` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
    "run-test-python-3.8.4":
      - step:
          image: python:3.8.4
          name: Tests-3.8.4
          script:
            - python --version
            - PYTHONPATH=$PWD
            - apt update
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r tests/requirements.txt
            - python setup.py build
            - pip install .
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Tests-3.8.4` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
    "run-test-python-3.9.0":
      - step:
          image: python:3.9
          name: Tests-3.9
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Tests-3.9` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
    "run-test-python-3.10":
      - step:
          image: python:3.10
          name: Tests-3.10
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Tests-3.10` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
    "run-test-python-3.11":
      - step:
          image: python:3.11
          name: Tests-3.11
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Tests-3.11` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
    "run-test-python-3.12":
      - step:
          image: python:3.12
          name: Tests-3.12
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Tests-3.12` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
    "examples":
      - step:
          image: python:3.7.8
          name: Examples-3.7.8
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_examples.py
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Examples-3.7.8` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
  custom:
    "xray-hook":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
          - name: TAGS
            description: "For multiple tags, separate them with commas (e.g., @DAT-..,@DAT-..)"
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh $TAGS
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-hook)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-pipeline":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
          - name: TAGS
            default: select-component
            allowed-values:
              - select-component
              - Ramsay
              - Piper
              - Piper-Pipelines
              - Piper-Faas
              - Piper-Triggers-Executions
              - Hodor
              - Apps
              - Rubiks
              - Rubiks-Dataset-Recipe
              - Rubiks-Items-Annotations
              - SDK
              - Woz
              - Roberto
              - Hedwig
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh $TAGS
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-pipeline: $TAGS)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-nightly-parallel-archived":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - python --version
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - export ARTIFACTS_PATH=$(python -c "import dtlpy; print(dtlpy.client_api.cookie_io.COOKIE)")
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh $TAGS
          artifacts:
            - $ARTIFACTS_PATH
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-nightly-parallel-archived - Setup)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
      - parallel:
          steps:
            - step:
                name: Hodor
                script:
                  - echo "Accessing cookie from the default step"
                  - ls -l $ARTIFACTS_PATH
                  - AVOID_TESTRAIL=true
                  - PYTHONPATH=$PWD
                  - chmod +x ./test.sh
                  - timeout 6600 ./test.sh Hodor
                after-script:
                  - |
                    if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Hodor (xray-nightly-parallel-archived)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
            - step:
                name: Apps
                script:
                  - echo "Accessing cookie from the default step"
                  - ls -l $ARTIFACTS_PATH
                  - AVOID_TESTRAIL=true
                  - PYTHONPATH=$PWD
                  - chmod +x ./test.sh
                  - timeout 6600 ./test.sh Apps
                after-script:
                  - |
                    if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Apps (xray-nightly-parallel-archived)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-Hodor":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Hodor
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Hodor)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-Apps":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Apps
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Apps)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-Ramsay":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Ramsay
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Ramsay)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-Rubiks":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Rubiks
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Rubiks)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-Rubiks-Dataset-Recipe":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Rubiks-Dataset-Recipe
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Rubiks-Dataset-Recipe)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-Rubiks-Items-Annotations":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Rubiks-Items-Annotations
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Rubiks-Items-Annotations)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-SDK":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh SDK
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-SDK)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-Woz":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Woz
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Woz)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-Roberto":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Roberto
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Roberto)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-Hedwig":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Hedwig
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Hedwig)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-Piper":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Piper
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Piper)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-Piper-Pipelines":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Piper-Pipelines
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Piper-Pipelines)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    "xray-Piper-Faas":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Piper-Faas
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Piper-Faas)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi


    "xray-Piper-Triggers-Executions":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Piper-Triggers-Executions
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Piper-Triggers-Executions)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi


    "xray-Billing_daily":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Billing_daily
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Billing_daily)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi



    "xray-Billing-weekly":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Billing_weekly
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Billing-weekly)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi



    "xray-Flows":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - step:
          image: python:3.11
          name: Test & Report to XRay
          script:
            - AVOID_TESTRAIL=true
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r requirements.txt
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - chmod +x ./test.sh
            - timeout 6600 ./test.sh Flows
          artifacts:
            - behave_test_report.json
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Test & Report to XRay (xray-Flows)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi



    "xray-nightly-parallel-1":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - parallel:
          - step:
              image: python:3.11
              name: Hodor
              script:
                - AVOID_TESTRAIL=true
                - python --version
                - PYTHONPATH=$PWD
                - pip install --upgrade pip
                - apt-get -y update && apt-get install -y libgl1-mesa-glx
                - pip install -r tests/requirements.txt
                - python setup.py build
                - python setup.py install
                - python tests/test_login.py
                - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
                - chmod +x ./test.sh
                - timeout 6600 ./test.sh Hodor
              artifacts:
                - behave_test_report.json
              after-script:
                - |
                  if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Hodor (xray-nightly-parallel-1)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
          - step:
              image: python:3.11
              name: Woz
              script:
                - AVOID_TESTRAIL=true
                - python --version
                - PYTHONPATH=$PWD
                - pip install --upgrade pip
                - apt-get -y update && apt-get install -y libgl1-mesa-glx
                - pip install -r tests/requirements.txt
                - python setup.py build
                - python setup.py install
                - python tests/test_login.py
                - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
                - chmod +x ./test.sh
                - timeout 6600 ./test.sh Woz
              artifacts:
                - behave_test_report.json
              after-script:
                - |
                  if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Woz (xray-nightly-parallel-1)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
          - step:
              image: python:3.11
              name: Ramsay
              script:
                - AVOID_TESTRAIL=true
                - python --version
                - PYTHONPATH=$PWD
                - pip install --upgrade pip
                - apt-get -y update && apt-get install -y libgl1-mesa-glx
                - pip install -r tests/requirements.txt
                - python setup.py build
                - python setup.py install
                - python tests/test_login.py
                - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
                - chmod +x ./test.sh
                - timeout 6600 ./test.sh Ramsay
              artifacts:
                - behave_test_report.json
              after-script:
                - |
                  if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Ramsay (xray-nightly-parallel-1)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
          - step:
              image: python:3.11
              name: SDK
              script:
                - AVOID_TESTRAIL=true
                - python --version
                - PYTHONPATH=$PWD
                - pip install --upgrade pip
                - apt-get -y update && apt-get install -y libgl1-mesa-glx
                - pip install -r tests/requirements.txt
                - python setup.py build
                - python setup.py install
                - python tests/test_login.py
                - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
                - chmod +x ./test.sh
                - timeout 6600 ./test.sh SDK
              artifacts:
                - behave_test_report.json
              after-script:
                - |
                  if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `SDK (xray-nightly-parallel-1)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
          - step:
              image: python:3.11
              name: Piper-Faas
              script:
                - AVOID_TESTRAIL=true
                - python --version
                - PYTHONPATH=$PWD
                - pip install --upgrade pip
                - apt-get -y update && apt-get install -y libgl1-mesa-glx
                - pip install -r tests/requirements.txt
                - python setup.py build
                - python setup.py install
                - python tests/test_login.py
                - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
                - chmod +x ./test.sh
                - timeout 6600 ./test.sh Piper-Faas
              artifacts:
                - behave_test_report.json
              after-script:
                - |
                  if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Piper-Faas (xray-nightly-parallel-1)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi


    "xray-nightly-parallel-2":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - parallel:
          - step:
              image: python:3.11
              name: Piper-Triggers-Executions
              script:
                - AVOID_TESTRAIL=true
                - python --version
                - PYTHONPATH=$PWD
                - pip install --upgrade pip
                - apt-get -y update && apt-get install -y libgl1-mesa-glx
                - pip install -r tests/requirements.txt
                - python setup.py build
                - python setup.py install
                - python tests/test_login.py
                - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
                - chmod +x ./test.sh
                - timeout 6600 ./test.sh Piper-Triggers-Executions
              artifacts:
                - behave_test_report.json
              after-script:
                - |
                  if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Piper-Triggers-Executions (xray-nightly-parallel-2)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
          - step:
              image: python:3.11
              name: Apps
              script:
                - AVOID_TESTRAIL=true
                - python --version
                - PYTHONPATH=$PWD
                - pip install --upgrade pip
                - apt-get -y update && apt-get install -y libgl1-mesa-glx
                - pip install -r tests/requirements.txt
                - python setup.py build
                - python setup.py install
                - python tests/test_login.py
                - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
                - chmod +x ./test.sh
                - timeout 6600 ./test.sh Apps
              artifacts:
                - behave_test_report.json
              after-script:
                - |
                  if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Apps (xray-nightly-parallel-2)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
          - step:
              image: python:3.11
              name: Rubiks-Items-Annotations
              script:
                - AVOID_TESTRAIL=true
                - python --version
                - PYTHONPATH=$PWD
                - pip install --upgrade pip
                - apt-get -y update && apt-get install -y libgl1-mesa-glx
                - pip install -r tests/requirements.txt
                - python setup.py build
                - python setup.py install
                - python tests/test_login.py
                - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
                - chmod +x ./test.sh
                - timeout 6600 ./test.sh Rubiks-Items-Annotations
              artifacts:
                - behave_test_report.json
              after-script:
                - |
                  if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Rubiks-Items-Annotations (xray-nightly-parallel-2)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
          - step:
              image: python:3.11
              name: Roberto
              script:
                - AVOID_TESTRAIL=true
                - python --version
                - PYTHONPATH=$PWD
                - pip install --upgrade pip
                - apt-get -y update && apt-get install -y libgl1-mesa-glx
                - pip install -r tests/requirements.txt
                - python setup.py build
                - python setup.py install
                - python tests/test_login.py
                - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
                - chmod +x ./test.sh
                - timeout 6600 ./test.sh Roberto
              artifacts:
                - behave_test_report.json
              after-script:
                - |
                  if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Roberto (xray-nightly-parallel-2)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi


    "xray-nightly-parallel-3":
      - variables:
          - name: DLP_ENV_NAME
            default: rc
      - parallel:
          - step:
              image: python:3.11
              name: Rubiks-Dataset-Recipe
              script:
                - AVOID_TESTRAIL=true
                - python --version
                - PYTHONPATH=$PWD
                - pip install --upgrade pip
                - apt-get -y update && apt-get install -y libgl1-mesa-glx
                - pip install -r tests/requirements.txt
                - python setup.py build
                - python setup.py install
                - python tests/test_login.py
                - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
                - chmod +x ./test.sh
                - timeout 6600 ./test.sh Rubiks-Dataset-Recipe
              artifacts:
                - behave_test_report.json
              after-script:
                - |
                  if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Rubiks-Dataset-Recipe (xray-nightly-parallel-3)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
          - step:
              image: python:3.11
              name: Piper-Pipelines
              script:
                - AVOID_TESTRAIL=true
                - python --version
                - PYTHONPATH=$PWD
                - pip install --upgrade pip
                - apt-get -y update && apt-get install -y libgl1-mesa-glx
                - pip install -r tests/requirements.txt
                - python setup.py build
                - python setup.py install
                - python tests/test_login.py
                - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
                - chmod +x ./test.sh
                - timeout 6600 ./test.sh Piper-Pipelines
              artifacts:
                - behave_test_report.json
              after-script:
                - |
                  if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Piper-Pipelines (xray-nightly-parallel-3)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi


    "schedule-tests":
      - variables:
          - name: ADDITIONAL_TITLE_XRAY
            description: "Add additional title for the Xray test execution"
      - step:
          image: python:3.10
          name: Tests-3.10
          script:
            - python --version
            - PYTHONPATH=$PWD
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
          artifacts:
            - tests/reports/**
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Tests-3.10 (schedule-tests)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

    custom-variables:
      - variables:
          - name: DLP_ENV_NAME
          - name: AVOID_TESTRAIL
            default: "true"
          - name: INDEX_DRIVER_VAR
            description: "Set a default type for dataset creation - Mongo / s2 - choose 'v1' or 'v2'"
          - name: API_KEY
            description: "Set the API key to true for login with api key"
          - name: SPECIFIC_FOLDERS
            description: "Select specific folders from features folder - comma separated no spaces"
          - name: ADDITIONAL_TITLE_XRAY
            description: "Add additional title for the Xray test execution"
          - name: DLP_ORG_NAME
            description: "Set different organization name for the test (user should be an admin in the org)"
      - step:
          image: python:3.10
          name: Tests-3.10
          script:
            - python --version
            - PYTHONPATH=$PWD
            - apt update
            - pip install --upgrade pip
            - apt-get -y update && apt-get install -y libgl1-mesa-glx
            - pip install -r tests/requirements.txt
            - python setup.py build
            - python setup.py install
            - python tests/test_login.py
            - git clone git@bitbucket.org:dataloop-ai/dtlpy-assets.git tests/assets
            - python tests/test_runner.py
          artifacts:
            - tests/reports/**
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Tests-3.10 (custom-variables)` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi

