options:
  docker: true
pipelines:
  tags:
    "*":
      - step:
          image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
          name: Build SDK Container
          script:
            # Get an oauth access token using the client credentials, parsing out the token with jq.
            - apt-get update && apt-get install -y curl jq

            # Make changes and commit back.
            - case "$BITBUCKET_TAG" in "") export BITBUCKET_TAG="build-$BITBUCKET_BUILD_NUMBER"; esac
            - apt-get -y update && apt-get install -y python3-pip
            - python3 setup.py bdist_wheel
            - docker login -u _json_key -p "$GCP_KEY" https://gcr.io
            - cp dist/dtlpy-$BITBUCKET_TAG-py3-none-any.whl dist/dtlpy-latest-py3-none-any.whl
            - echo "$GCP_KEY" >> k.json
            - gcloud auth activate-service-account --key-file=k.json
            - gsutil -m cp -R dist/**  gs://dtlpy/dev/
            - export DOCKER_BUILDKIT=0
            - chmod +x ./build-docker.sh
            - echo $BITBUCKET_TAG
            - ./build-docker.sh $BITBUCKET_TAG
            - git checkout -b "$BITBUCKET_TAG"
            - >
              export access_token=$(curl -s -X POST -u "${CLIENT_ID}:${CLIENT_SECRET}" \
                https://bitbucket.org/site/oauth2/access_token \
                -d grant_type=client_credentials -d scopes="repository"| jq --raw-output '.access_token')
            - git clone https://x-token-auth:${access_token}@bitbucket.org/dataloop-ai/piper-agent-runner.git
            - cd piper-agent-runner
            - git config user.email sdk@dataloop.ai
            - git checkout master
            - python3 bumpversion.py --hard $BITBUCKET_TAG.0
            - git push --follow-tags
            - cd ..
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Build SDK Container` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
      - step:
          name: Update dataloop-infra
          image: node:20.6.0
          script:
            - apt-get update && apt-get install -y curl jq
            - echo $BITBUCKET_TAG
            - export INFRA_BRANCH="rc"
            - echo $INFRA_BRANCH
            - case "$BITBUCKET_TAG" in "") export BITBUCKET_TAG="build-$BITBUCKET_BUILD_NUMBER"; esac
            - git config --global user.email "devops@dataloop.ai"
            - git config --global user.name "sdk-docs-pipeline"
            - git clone --branch $INFRA_BRANCH git@bitbucket.org:dataloop-ai/dataloop-infra.git && sed -i "s/^DTLPY.*$/DTLPY=$BITBUCKET_TAG/" dataloop-infra/versions/.rc  && cat dataloop-infra/versions/.rc
            - cd dataloop-infra && git commit -am "DTLPY=$BITBUCKET_TAG"
            - >
              export access_token=$(curl -s -X POST -u "${AUTH0_CONSUMERS_DTLPY_PIPELINE_CLIENT_ID}:${AUTH0_CONSUMERS_DTLPY_PIPELINE_CLIENT_SECRET}" \
                https://bitbucket.org/site/oauth2/access_token \
                -d grant_type=client_credentials -d scopes="repository"| jq --raw-output '.access_token')

            - git tag -a $BITBUCKET_TAG -m "DTLPY=$BITBUCKET_TAG" && git push https://x-token-auth:${access_token}@bitbucket.org/dataloop-ai/dataloop-infra.git --follow-tags
          after-script:
            - |
              if [ "$BITBUCKET_EXIT_CODE" -ne 0 ]; then curl -X POST -H 'Content-type: application/json' --data '{"text": "ðŸš¨ *Pipeline Failed!* \\n Step: `Update dataloop-infra` \\n Repository: `'"$BITBUCKET_REPO_SLUG"'` \\n Branch: `'"$BITBUCKET_BRANCH"'` \\n Commit: `'"$BITBUCKET_COMMIT"'` \\n <'"$BITBUCKET_GIT_HTTP_ORIGIN"'/commits/'"$BITBUCKET_COMMIT"'|View Commit>"}' "$SLACK_WEBHOOK_URL"; fi
  pull-requests:
    "**":
      - step:
          name: Trigger E2E Tests
          image: alpine:latest
          script:
            - pipe: atlassian/trigger-pipeline:5.10.1
              variables:
                BITBUCKET_ACCESS_TOKEN: $PIPELINES_TRIGGER_TOKEN
                ACCOUNT: "dataloop-ai"
                REPOSITORY: "python-e2e-tests"
                REF_TYPE: "branch"
                REF_NAME: "rc"
                CUSTOM_PIPELINE_NAME: "sanity"
                PIPELINE_VARIABLES: >
                  [{
                    "key": "DLP_ENV_NAME",
                    "value": "rc"
                  },
                  {
                    "key": "ADDITIONAL_TITLE_XRAY",
                    "value": "sanity"
                  },
                  {
                    "key": "DTLPY_BRANCH",
                    "value": "$BITBUCKET_BRANCH"
                  }]
                WAIT: "true"
            - echo "Sanity E2E tests pipeline triggered for RC branch"
  test-branches:
     rc:
       - step:
           name: Create RC Tag
           image: python:3.9-slim
           script:
             - apt-get update && apt-get install -y git curl jq
             - pip install bumpversion
             - git config --global user.email "devops@dataloop.ai"
             - git config --global user.name "sdk-pipeline"
             # Only run on merge commits to avoid infinite loops
             # Check if this is a merge commit by looking for merge commit message pattern
             - |
               # Method 1: Check if this is a merge commit by git log
               if ! git log --oneline -1 | grep -q "Merge"; then
                 echo "This is not a merge commit, skipping version bump..."
                 exit 0
               fi
               
               # Method 2: Additional check - ensure it's not a version bump commit
               if git log --oneline -1 | grep -q "Bump version"; then
                 echo "This is already a version bump commit, skipping..."
                 exit 0
               fi
               
               echo "Merge commit detected, proceeding with version bump..."
             - >
               export access_token=$(curl -s -X POST -u "${CLIENT_ID}:${CLIENT_SECRET}" \
                 https://bitbucket.org/site/oauth2/access_token \
                 -d grant_type=client_credentials -d scopes="repository"| jq --raw-output '.access_token')
             - bumpversion patch
             - git push https://x-token-auth:${access_token}@bitbucket.org/dataloop-ai/dtlpy.git --follow-tags
